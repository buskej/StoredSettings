// Place your key bindings in this file to override the defaultsauto[]
[
    //goat
        {
            "key": "shift+3",
            "command": "editor.action.commentLine",
            "when": "editorTextFocus && !editorReadonly"
        },
        {
            "key": "shift+enter",
            "command": "editor.action.insertLineAfter",
            "when": "editorTextFocus && !editorReadonly"
        },
    
    //other
        {
            "key": "ctrl+enter",
            "command": "python.execInTerminal-icon"
        },
        {
            "key": "ctrl+enter",
            "command": "notebook.cell.executeAndSelectBelow",
            "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
        },
        {
            "key": "ctrl+space",
            "command": "workbench.view.explorer",
            "when": "viewContainer.workbench.view.explorer.enabled"
        },
        {
            "key": "ctrl+p",
            "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
            "when": "inFilesPicker && inQuickOpen"
        },
        {
            "key": "ctrl+b",
            "command": "workbench.action.toggleSidebarVisibility"
        },
        {
            "key": "ctrl+p",
            "command": "workbench.action.showCommands"
        },
        {
            "key": "ctrl+g",
            "command": "workbench.view.scm",
            "when": "workbench.scm.active"
        },

    //remove and unsorted
        {
            "key": "shift+enter",
            "command": "-notebook.cell.executeAndSelectBelow",
            "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
        },
        {
            "key": "ctrl+/",
            "command": "-editor.action.commentLine",
            "when": "editorTextFocus && !editorReadonly"
        },
        {
            "key": "ctrl+shift+enter",
            "command": "-notebook.cell.insertCodeCellAbove",
            "when": "notebookCellListFocused && !inputFocus"
        },
        {
            "key": "shift+enter",
            "command": "-python.execSelectionInTerminal",
            "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
        },
        {
            "key": "ctrl+enter",
            "command": "-notebook.cell.insertCodeCellBelow",
            "when": "notebookCellListFocused && !inputFocus"
        },
        {
            "key": "ctrl+shift+e",
            "command": "-workbench.view.explorer",
            "when": "viewContainer.workbench.view.explorer.enabled"
        },
        {
            "key": "ctrl+shift+e",
            "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
            "when": "inFilesPicker && inQuickOpen"
        },
        {
            "key": "ctrl+b",
            "command": "-workbench.action.toggleSidebarVisibility"
        },
        {
            "key": "ctrl+shift+p",
            "command": "-workbench.action.showCommands"
        },
        {
            "key": "ctrl+shift+p",
            "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
            "when": "inFilesPicker && inQuickOpen"
        },
        {
            "key": "ctrl+shift+g",
            "command": "-workbench.view.scm",
            "when": "workbench.scm.active"
        },
    ]