// Place your key bindings in this file to override the defaultsauto[]
[
    /////////////// goat ///////////////
            {
                "key": "shift+enter",
                "command": "editor.action.insertLineAfter",
                "when": "editorTextFocus && !editorReadonly"
            },
    
    ///////////// ctrl+enter ///////////
            {
                "key": "ctrl+enter",
                "command": "python.execInTerminal-icon",
                "when": "resourceExtname == '.py' && editorLangId == python"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.files.save",
                "when": "resourceExtname == '.js' && editorLangId == javascript"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.files.save",
                "when": "resourceExtname == '.css' && editorLangId == javascript"
            },
            {
                "key": "ctrl+enter",
                "command": "workbench.action.files.save",
                "when": "resourceExtname == '.html'"
            },
            {
                "key": "ctrl+enter",
                "command": "notebook.cell.executeAndSelectBelow",
                "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
            },
    /////////////// add ///////////////
            {
                "key": "ctrl+space",
                "command": "workbench.view.explorer",
                "when": "viewContainer.workbench.view.explorer.enabled"
            },
            {
                "key": "ctrl+p",
                "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "inFilesPicker && inQuickOpen"
            },
            {
                "key": "ctrl+b",
                "command": "workbench.action.toggleSidebarVisibility"
            },
            {
                "key": "ctrl+p",
                "command": "workbench.action.showCommands"
            },
            {
                "key": "ctrl+g",
                "command": "workbench.view.scm",
                "when": "workbench.scm.active"
            },
            {
                "key": "ctrl+k ctrl+j",
                "command": "workbench.action.splitEditorLeft"
            },
            {
                "key": "ctrl+k ctrl+l",
                "command": "workbench.action.focusRightGroup"
            },
            {
                "key": "ctrl+k ctrl+j",
                "command": "workbench.action.focusLeftGroup"
            },
            {
                "key": "alt+e",
                "command": "workbench.action.quickOpen"
            },
            {
                "key": "alt+e",
                "command": "editor.action.toggleScreenReaderAccessibilityMode",
                "when": "accessibilityHelpIsShown"
            },
            {
                "key": "alt+e",
                "command": "workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "inFilesPicker && inQuickOpen"
            },
            {
                "key": "alt+r",
                "command": "workbench.action.openRecent"
            },
            {
                "key": "alt+r",
                "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "inQuickOpen && inRecentFilesPicker"
            },
    
    /////////////// remove ///////////////
            {
                "key": "shift+enter",
                "command": "-notebook.cell.executeAndSelectBelow",
                "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "-notebook.cell.insertCodeCellAbove",
                "when": "notebookCellListFocused && !inputFocus"
            },
            {
                "key": "shift+enter",
                "command": "-python.execSelectionInTerminal",
                "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
            },
            {
                "key": "ctrl+enter",
                "command": "-notebook.cell.insertCodeCellBelow",
                "when": "notebookCellListFocused && !inputFocus"
            },
            {
                "key": "ctrl+shift+e",
                "command": "-workbench.view.explorer",
                "when": "viewContainer.workbench.view.explorer.enabled"
            },
            {
                "key": "ctrl+shift+e",
                "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "inFilesPicker && inQuickOpen"
            },
            {
                "key": "ctrl+b",
                "command": "-workbench.action.toggleSidebarVisibility"
            },
            {
                "key": "ctrl+shift+p",
                "command": "-workbench.action.showCommands"
            },
            {
                "key": "ctrl+shift+p",
                "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
                "when": "inFilesPicker && inQuickOpen"
            },
            {
                "key": "ctrl+shift+g",
                "command": "-workbench.view.scm",
                "when": "workbench.scm.active"
            },
            {
                "key": "ctrl+k ctrl+shift+[Backslash]",
                "command": "-workbench.action.splitEditorLeft"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                "when": "inQuickOpen && inRecentFilesPicker"
            },
            {
                "key": "ctrl+e",
                "command": "-workbench.action.quickOpen"
            },
            {
                "key": "ctrl+e",
                "command": "-editor.action.toggleScreenReaderAccessibilityMode",
                "when": "accessibilityHelpIsShown"
            },
            {
                "key": "ctrl+e",
                "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
                "when": "inFilesPicker && inQuickOpen"
            },
            {
                "key": "ctrl+r",
                "command": "-workbench.action.openRecent"
            },
            {
                "key": "ctrl+k ctrl+right",
                "command": "-workbench.action.focusRightGroup"
            },
            {
                "key": "ctrl+k ctrl+left",
                "command": "-workbench.action.focusLeftGroup"
            },
    
    
    /////////////// uses "block travel" extension ///////////////
            {
                "key": "ctrl+down",
                "command": "block-travel.jumpDown",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+down",
                "command": "-block-travel.jumpDown",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+up",
                "command": "block-travel.jumpUp",
                "when": "editorTextFocus"
            },
            {
                "key": "alt+up",
                "command": "-block-travel.jumpUp",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+shift+up",
                "command": "block-travel.selectUp",
                "when": "editorTextFocus"
            },
            {
                "key": "shift+alt+up",
                "command": "-block-travel.selectUp",
                "when": "editorTextFocus"
            },
            {
                "key": "ctrl+shift+down",
                "command": "block-travel.selectDown",
                "when": "editorTextFocus"
            },
            {
                "key": "shift+alt+down",
                "command": "-block-travel.selectDown",
                "when": "editorTextFocus"
            },
    
    /////////////// unsorted ///////////////
            {
                // this is to make the next change to be imported under unsorted
            },
        ]